/* 알고리즘 - 안득하
<추상화>
-현재상태 : 현 위치
-목표상태 : 다음 위치
-조건(핵심요소) 
  --현재 위치에 2(먹이)가 있거나 8,8의 위치에 도달한 경우, 현 위치에 9를 저장하고 정지
  --현재 위치에 9를 저장하기
  --오른쪽이 0(벽이 아닐 때) - > 오른쪽 이동  // 오른쪽 먼저 탐색
  --만약, 오른쪽이 1(벽)이라면, 아래쪽을 검사
  --아래쪽이 0이면, 아래쪽으로 이동
  --아래쪽이 1이면, 정지(더 이상 길이 없음)
*/

#include<bits/stdc++.h> - 안득하
using namespace std;
 
int a[11][11];
bool flag=0;
 
int antWay(int i, int j){
    if(a[i][j]==1) return 0;
    if(a[i][j]==2 or (i==8 and j==8)){
        a[i][j]=9;
        flag=1;
        return 0;
    }
     
    a[i][j]=9;
    antWay(i,j+1);
    if(flag==0) antWay(i+1,j);
    return 0;
}
int main(){
 
    for(int i=0;i<10;i++){
        for(int j=0;j<10;j++){
            cin>>a[i][j]; 
        }
    }
     
    antWay(1,1);
     
    for(int i=0;i<10;i++,cout<<endl){
        for(int j=0;j<10;j++){
            cout<<a[i][j]<<" "; 
        }
    }
    return 0;
}
